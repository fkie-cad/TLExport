from unittest import TestCase
from tlexport.quic.quic_decryptor import QuicDecryptor
from cryptography.hazmat.primitives.ciphers.aead import AESGCM, ChaCha20Poly1305


class TestQuicDecryptor(TestCase):
    def setUp(self):
        self.initial_decryptor = QuicDecryptor(
            [bytes.fromhex("cf3a5331653c364c88f0f379b6067e37"), bytes.fromhex("0ac1493ca1905853b0bba03e"),
             bytes.fromhex("1f369613dd76d5467730efcbe3b1a22d"), bytes.fromhex("fa044b2f42a3fd3b46fb255c")],
            AESGCM)

        self.handshake_decryptor_aes_gcm_128 = QuicDecryptor(
            [bytes.fromhex("78639e484687af4124a1e645d636a34a"), bytes.fromhex("7076c4bd5fcb6e6cb1a7ac42"),
             bytes.fromhex("37b2bc8a8d9d176a9ba730aed578badc"), bytes.fromhex("0856d73ad623683950a0407f")],
            AESGCM
        )

        self.handshake_decryptor_aes_gcm_256 = QuicDecryptor(
            [bytes.fromhex("6c64df56b16bc391b02ec889bd45dbf2bed95b62497a8e67440d45c86d66c37b"), bytes.fromhex("c887d819c4c70d55f3d3cccb"),
             bytes.fromhex("0b39e53b5e55813cbbb10083d79db16b4aa659247d4e878df87256cd4f70efa8"), bytes.fromhex("493067a03444c8ccc180a966")],
            AESGCM
        )

        self.handshake_decryptor_chacha20 = QuicDecryptor(
            [bytes.fromhex("06ef6ffdcf3cc12419c036f7130636cb6a28fb1a385768a32bd5771924ad5d69"),
             bytes.fromhex("73fd90daad1b4b88ebdfbc66"),
             bytes.fromhex("02d99c4b142b9fd2473b19316c7492274bca67d6d6e75069bdde169c89a67d49"),
             bytes.fromhex("729b4b99b677f7211ac61fb0")],
            ChaCha20Poly1305
        )

        self.chacha_decryptor = QuicDecryptor([bytes.fromhex("c6d98ff3441c3fe1b2182094f69caa2ed4b716b65488960a7a984979fb23e1c8"), bytes.fromhex("e0459b3474bdd0e44a41c144"), bytes.fromhex("c6d98ff3441c3fe1b2182094f69caa2ed4b716b65488960a7a984979fb23e1c8"), bytes.fromhex("e0459b3474bdd0e44a41c144")], ChaCha20Poly1305)

        self.application_decryptor_aes_128_gcm = QuicDecryptor(
            [bytes.fromhex("cdca566efd02c0cd4c2d5c86e9287f02"),
             bytes.fromhex("1bb922a352e6f308fad49cfd"),
             bytes.fromhex("3ec0404a8f2c08e1b0817a20277bfcc3"),
             bytes.fromhex("e2129b5df083342078368bc7")], AESGCM)

        self.application_decryptor_aes_256_gcm = QuicDecryptor([bytes.fromhex("ac7393a1f5e2ccf9fa20a126574a835ebbdc5d95d94058bc376999c1c1bfb9f8"),
                                                                bytes.fromhex("3c2ece416103632c18df9ab6"),
                                                                bytes.fromhex("ac7393a1f5e2ccf9fa20a126574a835ebbdc5d95d94058bc376999c1c1bfb9f8"),
                                                                bytes.fromhex("56649096a87d2da1a06b2224")], AESGCM)
    def test_initial_decryption(self):
        # Client Initial (From RFC 9001)
        ciphertext = bytes.fromhex("d1b1c98dd7689fb8ec11d242b123dc9bd8bab936b47d92ec356c0bab7df5976d27cd449f63300099f3991c260ec4c60d17b31f8429157bb35a1282a643a8d2262cad67500cadb8e7378c8eb7539ec4d4905fed1bee1fc8aafba17c750e2c7ace01e6005f80fcb7df621230c83711b39343fa028cea7f7fb5ff89eac2308249a02252155e2347b63d58c5457afd84d05dfffdb20392844ae812154682e9cf012f9021a6f0be17ddd0c2084dce25ff9b06cde535d0f920a2db1bf362c23e596d11a4f5a6cf3948838a3aec4e15daf8500a6ef69ec4e3feb6b1d98e610ac8b7ec3faf6ad760b7bad1db4ba3485e8a94dc250ae3fdb41ed15fb6a8e5eba0fc3dd60bc8e30c5c4287e53805db059ae0648db2f64264ed5e39be2e20d82df566da8dd5998ccabdae053060ae6c7b4378e846d29f37ed7b4ea9ec5d82e7961b7f25a9323851f681d582363aa5f89937f5a67258bf63ad6f1a0b1d96dbd4faddfcefc5266ba6611722395c906556be52afe3f565636ad1b17d508b73d8743eeb524be22b3dcbc2c7468d54119c7468449a13d8e3b95811a198f3491de3e7fe942b330407abf82a4ed7c1b311663ac69890f4157015853d91e923037c227a33cdd5ec281ca3f79c44546b9d90ca00f064c99e3dd97911d39fe9c5d0b23a229a234cb36186c4819e8b9c5927726632291d6a418211cc2962e20fe47feb3edf330f2c603a9d48c0fcb5699dbfe5896425c5bac4aee82e57a85aaf4e2513e4f05796b07ba2ee47d80506f8d2c25e50fd14de71e6c418559302f939b0e1abd576f279c4b2e0feb85c1f28ff18f58891ffef132eef2fa09346aee33c28eb130ff28f5b766953334113211996d20011a198e3fc433f9f2541010ae17c1bf202580f6047472fb36857fe843b19f5984009ddc324044e847a4f4a0ab34f719595de37252d6235365e9b84392b061085349d73203a4a13e96f5432ec0fd4a1ee65accdd5e3904df54c1da510b0ff20dcc0c77fcb2c0e0eb605cb0504db87632cf3d8b4dae6e705769d1de354270123cb11450efc60ac47683d7b8d0f811365565fd98c4c8eb936bcab8d069fc33bd801b03adea2e1fbc5aa463d08ca19896d2bf59a071b851e6c239052172f296bfb5e72404790a2181014f3b94a4e97d117b438130368cc39dbb2d198065ae3986547926cd2162f40a29f0c3c8745c0f50fba3852e566d44575c29d39a03f0cda721984b6f440591f355e12d439ff150aab7613499dbd49adabc8676eef023b15b65bfc5ca06948109f23f350db82123535eb8a7433bdabcb909271a6ecbcb58b936a88cd4e8f2e6ff5800175f113253d8fa9ca8885c2f552e657dc603f252e1a8e308f76f0be79e2fb8f5d5fbbe2e30ecadd220723c8c0aea8078cdfcb3868263ff8f0940054da48781893a7e49ad5aff4af300cd804a6b6279ab3ff3afb64491c85194aab760d58a606654f9f4400e8b38591356fbf6425aca26dc85244259ff2b19c41b9f96f3ca9ec1dde434da7d2d392b905ddf3d1f9af93d1af5950bd493f5aa731b4056df31bd267b6b90a079831aaf579be0a39013137aac6d404f518cfd46840647e78bfe706ca4cf5e9c5453e9f7cfd2b8b4c8d169a44e55c88d4a9a7f9474241e221af44860018ab0856972e194cd934")
        associated_data = bytes.fromhex("c300000001088394c8f03e5157080000449e00000002")

        plaintext: bytes = self.initial_decryptor.decrypt(ciphertext, b"\x02", associated_data, False)
        plaintext = plaintext.rstrip(b"\x00")
        self.assertEqual(plaintext, bytes.fromhex("060040f1010000ed0303ebf8fa56f12939b9584a3896472ec40bb863cfd3e86804fe3a47f06a2b69484c00000413011302010000c000000010000e00000b6578616d706c652e636f6dff01000100000a00080006001d0017001800100007000504616c706e000500050100000000003300260024001d00209370b2c9caa47fbabaf4559fedba753de171fa71f50f1ce15d43e994ec74d748002b0003020304000d0010000e0403050306030203080408050806002d00020101001c00024001003900320408ffffffffffffffff05048000ffff07048000ffff0801100104800075300901100f088394c8f03e51570806048000ffff"))

        # Server Initial (From RFC 9001)
        ciphertext = bytes.fromhex("5a482cd0991cd25b0aac406a5816b6394100f37a1c69797554780bb38cc5a99f5ede4cf73c3ec2493a1839b3dbcba3f6ea46c5b7684df3548e7ddeb9c3bf9c73cc3f3bded74b562bfb19fb84022f8ef4cdd93795d77d06edbb7aaf2f58891850abbdca3d20398c276456cbc42158407dd074ee")
        associated_data = bytes.fromhex("c1000000010008f067a5502a4262b50040750001")

        plaintext = self.initial_decryptor.decrypt(ciphertext, b"\x01", associated_data, True)

        self.assertEqual(plaintext, bytes.fromhex("02000000000600405a020000560303eefce7f7b37ba1d1632e96677825ddf73988cfc79825df566dc5430b9a045a1200130100002e00330024001d00209d3c940d89690b84d08a60993c144eca684d1081287c834d5311bcf32bb9da1a002b00020304"))

    def test_handshake_decryption(self):
        # AES_GCM_128
        ciphertext = bytes.fromhex("92b62342219bd5f0989c8e34edaa995e26a7d2c09a4f0519701ad9b01d0c64e2fce6063a4d39a5374eb43573b4225ab618b8d0f0df12b1558b1769242b0934b40d25550cde3f43197587dbbf53fbc6755549cd3660d6940465bafe383920ad6c54d563dd7325af39ac818ec2d3307dfcd5d97fe2747b3b21263ca92efa55bf91c78c6e3471b74bf54b187e6701bfae21136de6192a62a3131490584219e52cd0aa6ab026fd0898175041da5fb9ea22ac0324823af86578c03a118839e8ef5a7e9134c460421bf8a7fd606b3c80980baeea55b77b6fb0800562577e0df4337cfbf4640f2f36498dcaf12c66656d347159fb43249470a4bf13277a4572e7fafac0b1bef68364b229bb3d83fb1273f972edb09af67f65058ca108d547fa195b6e444109cb3a92721d4f82b6503d96244b05bd7bc87ed65c96529fdf9738e9b5565c5429b819830b2ca481975486ae79e5e946a51d61329ade599fa77e5bcaab76e473b5e6386760d9d8a0d5ebe203efcc313a3152f5bbe28644a24ecd57a0a79f31ce330ac84ba4f07851ce6dac87ea257c6a1458c3a351601d4801368fbdcd124531ba2ba9bd2b4f3d3177ff94d966f45fc997df208bdbf370aae8e3a9c94c17ea148e1341a802ef6da05df92283ef5257e50d57a3d254a83c87b52693ecf8b6b5fbe082a891ac8111136bce2aab4dc2f23a4c4d367e36a5cc9f212844fad328247d7153ef7acf08d3cd538ee02dd8e6eb7eb90e0ceb1331f4c782adf0bc1a13c8afc807bcf8d6c190d46c35b180785d1fb7c645fb071c9cba1b8be2bfaa39864592b2d5a8f55392f138447866b3ff68cdaef9ffb8b551f74d18be4eedbe6f21c4dfa94237dff4004db5d08d9d7339ac2ddfce96c3e164215fc996b96fba3bd5636f6ab88fe3a724999fc38931f675d7f72deb87200d4ff251172c7b576ac99ad5b90d51a5aefed58c9fd0a376e7fab42f8725956f3559cee4444da826cad29edeb8f79370a709b060325b4e79643380998a17f4d58ff8521d93685b51bcb58b4179be88db8dd6eb1e32053b24f002229b5f7d2dc2749e6d2fab9d46433f3a66bdd539fb7707a2b694ce2c8b3253910b0012df66ade5674a84559eca3551232c30bcda48e906e94b7038dd179a776dd1e8bc8e0f07fcae912a7907c69b4d0ee78abde3bfd47cb5b0f49cf566712f26346ffbf410f34a8ed820ed7231b97c12804ef833724814320434ea9d33f7b8c536cb44c1a81efad7d24d8ecda1640766e3c6c693872c7f7236b59823ec1aaf2654e8ba544be18ca3066b6c2ada0293db03f1cff4269d2103e42334d2b3b0d6c0937546f2bcd4eae401e56d3c1dc1007afefc578c8f0fcdc512ea9f2e233023b54c33f62ed87e43b4820f")
        associated_data = bytes.fromhex("a00000000111defbb4879c124a4b6be745d78143058068123ad3da1b240cb26a811418c2229675e1bc28800003d900")

        plaintext: bytes = self.handshake_decryptor_aes_gcm_128.decrypt(ciphertext, b"\x00", associated_data, True)

        self.assertEqual(plaintext, bytes.fromhex("060043c40800007e007c003900690012cce9b1516132de45fe88496eddb843506804021040e9a596e8cef986558a4f887b71f11f0f123ad3da1b240cb26a811418c2229675e1bc28060480040000070480040000040480100000080240640901030104800075300e01076ab20011080000000100000001001000050003026833001c000240010b0003a00000039c000397308203933082027ba00302010202146a95f37e73b552b1705f0ebfcdce7f1f99a05821300d06092a864886f70d01010b05003059310b30090603550406130241553113301106035504080c0a536f6d652d53746174653121301f060355040a0c18496e7465726e6574205769646769747320507479204c74643112301006035504030c096c6f63616c686f7374301e170d3233313232313131303732325a170d3234313232303131303732325a3059310b30090603550406130241553113301106035504080c0a536f6d652d53746174653121301f060355040a0c18496e7465726e6574205769646769747320507479204c74643112301006035504030c096c6f63616c686f737430820122300d06092a864886f70d01010105000382010f003082010a0282010100e48e6d6c21c0fca9810817b31ee083f7cedc98f5b9cd1f038e4b4df756abcc261f66f131902a8c031615fd5411a917f656f893d649cd604daa73bd00fdd764fe3c6c1cc347e66ffb6c0714abf0f4b9cdf24d7d7d5b2596556f45e81672a565425cd64db8815f66c6529ae6f59eacc5cfeb969523332c94193fc6f4731b25fa4d355bbd2fac165b418c021992991f2e22c93eb7bcf25dfdbf4b47b17e7386f96716dae9681ce5e086f1d1c2f09deeaa87f518d47a2f540b44319b6e078ae4253c523267c1ee5cd123dec22a9055f50bccff6e401d4c59780b3ee2cb26131c5d5e9243f069fa60875aa3a907d2a3d6242e82e2d0d3928f191a4bad3fe33f5427530203010001a3533051301d0603551d0e0416041426e46d370ddf57c69be4f3b9a85d0aa32021a316301f0603551d2304183016801426e46d370ddf57c69be4f3b9a85d0aa32021a316300f0603551d130101ff040530030101ff300d06092a864886f70d01010b05000382010100771e8ba50a264cc9ad131e9479b51eab889ac05aa00ab3662cc6200860a9c4ee3245f53a9137298bbefdc01529ee17725e0efeb614af8dbb478499b4feedb7a4c7380aba5b8d5705c8c1ab1da1a3bd99c50a41cd060dadeb654589bc06d98db2dfb787a985e8e18b8484c9730a2c87e62299c6b7981afc26a54a4997d651d669cfab9616ea50d2028dc486885574c5beb5ba7bf4cad8473ca5477bbc18046f2a"))

        # AES_GCM_256
        ciphertext = bytes.fromhex("5f6e36d345ccda9bb3723c0828e6657b50c9243daafa82787e8ac90434d55dd51a8d567ef3e1578facf225c32ba8fc04ddc59f0d2188fb4804f5e28a466c604e9ec2c021569f3cbceac6878738aceae12e8de8e21d4db276553f84eaf856b9d481906c68ddfa9c0ed195b9c72ad2dcc781787a5563ec9f9f5fbd0524a59f2630851c3e6e9f01e546ced7a02727b0ef72f6047b69e2e143c806181905b80ca5a5a6111deb3c277f272c20c94be007e1e794149192f5ada3f99a6e8a2e07b2f4d58e4235155ea8de77d2028bd75233dabcffbb4c1b165685e9f90d339a5639620b3a789485fbfe7a7b43f4feeb7960d09f1006de24b03f477b0b5f91358977f1febbf65600ed316c2341adae5549c32807b4157e621724057d93992f7bdba919f530279090c88002b90d93deb19b0879564950174a670aac0c49592750279f3c73c9f45c62b8d3dc10dc55f9ac9aa3b5c6846505fed7457279a6a7e53dbbd0d7fc51f4472cf8034e5ec0c710893905cb85eb577bcb99bb9de127328293ac1fe106ebd3714b4273b3ac9b22e6c43eb1d6413e141f73b40b6678ba3cd4639e94639f9a115ac39cf2b895893e8d61bee4642c69b84c5f5f8376817a8929b766b686d80820c40d7551bc960bf9f79a185372f18011f6fa4c7dd2f0d69a1d1adbb0ecd8275070d13f327c80a4faa55b537531fedcd2e51d530f7e4f65355905a7ff6b9bf215c184a254d2063263f1fb53ccd1c91eef6271e5aed6824bc22d844b26e4805d277f8d6b1a226e60dc04d4296ba080be349523c639befbb85f11125b621a6006856774f9164ba4c01211957f0d51b2008e38281a81e52f9bcbc40ec51711433ab7acf4edb0ac70b828b4bdb7d90124a0ff2183bd86945242f7e8a6c39dfc218bd286c4e0e9e38545514a16a3fc9819b51205028017b9501dfbd20105f0e98001267eea6d0165ea399a44d2e8f716abf06cc65aa4543f198e582aea704d55944fafd03c710c3f68994f3d3b223c66f596441b4ed98cfee6c87a00cca2faa27e3e7bbb42679670a273c1a0c2b74ee3a9f3b6cdecb3b3a2fbf590e40e0fe44e8f66f2b901eed024e62e9d9887e83ac7b92c023366c1e2b55a02916d987fdf880b0226d8b25086525d38ffa04db3e8064d3f22b1a89dbe1ea72dfdd211729a60371e266300905a594ca1f0070c8f8a0e27ab64080899d1bd16cca62bbfd15fcd3fd1561fb746df5050f0d4f57200ed7e8a3ea5e5e70d3ed744a21530ff0bfcd90caf24386c3bc8b6591e2ff0834efeda9b9fcfe2ddae022ca3fa9be775fa3aa2da46a8746c2e22bd0d05fa01e83e0813f1d41646850467db08e4b2ea96079b53a1fadcf708399a6ff68536ab1ec12e92856bc2788a")
        associated_data = bytes.fromhex("e00000000111d938ff020b30ce7dfc3aed3ba582e019e712bddc7b61616794467cf4cd28819913b0c02e800003d500")

        plaintext: bytes = self.handshake_decryptor_aes_gcm_256.decrypt(ciphertext, b"\x00", associated_data, True)

        self.assertEqual(plaintext, bytes.fromhex("060043c00800007e007c0039006900123258bc5c70decd60aa5626797a18781db94102108e6630d562b2191fc725e284bcce233a0f12bddc7b61616794467cf4cd28819913b0c02e060480040000070480040000040480100000080240640901030104800075300e01076ab20011080000000100000001001000050003026833001c000240010b0003a00000039c000397308203933082027ba00302010202146a95f37e73b552b1705f0ebfcdce7f1f99a05821300d06092a864886f70d01010b05003059310b30090603550406130241553113301106035504080c0a536f6d652d53746174653121301f060355040a0c18496e7465726e6574205769646769747320507479204c74643112301006035504030c096c6f63616c686f7374301e170d3233313232313131303732325a170d3234313232303131303732325a3059310b30090603550406130241553113301106035504080c0a536f6d652d53746174653121301f060355040a0c18496e7465726e6574205769646769747320507479204c74643112301006035504030c096c6f63616c686f737430820122300d06092a864886f70d01010105000382010f003082010a0282010100e48e6d6c21c0fca9810817b31ee083f7cedc98f5b9cd1f038e4b4df756abcc261f66f131902a8c031615fd5411a917f656f893d649cd604daa73bd00fdd764fe3c6c1cc347e66ffb6c0714abf0f4b9cdf24d7d7d5b2596556f45e81672a565425cd64db8815f66c6529ae6f59eacc5cfeb969523332c94193fc6f4731b25fa4d355bbd2fac165b418c021992991f2e22c93eb7bcf25dfdbf4b47b17e7386f96716dae9681ce5e086f1d1c2f09deeaa87f518d47a2f540b44319b6e078ae4253c523267c1ee5cd123dec22a9055f50bccff6e401d4c59780b3ee2cb26131c5d5e9243f069fa60875aa3a907d2a3d6242e82e2d0d3928f191a4bad3fe33f5427530203010001a3533051301d0603551d0e0416041426e46d370ddf57c69be4f3b9a85d0aa32021a316301f0603551d2304183016801426e46d370ddf57c69be4f3b9a85d0aa32021a316300f0603551d130101ff040530030101ff300d06092a864886f70d01010b05000382010100771e8ba50a264cc9ad131e9479b51eab889ac05aa00ab3662cc6200860a9c4ee3245f53a9137298bbefdc01529ee17725e0efeb614af8dbb478499b4feedb7a4c7380aba5b8d5705c8c1ab1da1a3bd99c50a41cd060dadeb654589bc06d98db2dfb787a985e8e18b8484c9730a2c87e62299c6b7981afc26a54a4997d651d669cfab9616ea50d2028dc486885574c5beb5ba7bf4cad8473ca5477bbc"))

        # ChaCha20
        ciphertext = bytes.fromhex("4f30d5bea5bfb04354225fb9fb6f46e7d5efc9b204f5a256583afd58ff4f920d89fde64bcadc58f867607c0fe9085f0f5dccbf9a781daeeb2095e154f730019d6239399241db95933223c4934146eaeb3653945d9b21f6783b663c761094d4d3d3066bc80e25b48130ea131d13d166d8a2c1e74025d11d73f4706b377f1a6f4a8aeb62f2df6af4605a9d198648858ba03f9fd03d760bcde9767f31d9a239de72e1539fa209a4204667c7129b4908a86d34d28f44ba5ff57d827b30e9fe09bab157df87fcbf134f9f50f0cd41b146ad5cba94f38eedf6da9666d3bfb88873042da2de89980481986a9ccd9dfd922f28619531e1b9c0814a71fb9c8e0ea9bb9e90df9ea8bfad64d129a9acf0f40b9ff801639c9fda4f1bed4fb8e3e326923c2604808126abdd1d4991236f7d7e65d0969e37f876359e37f784f1604a451d0fe89991abfe27c15eda25134584c082af07102c3e63737f42ee49404c5adb382aa8ad232345de56ff0637fa5ae6dae47fc020515ea98f96448c17adb69da7e4002eee81085e44527a81effc4e84503111f46f44f097c0cb4f7e619761a7d76d7dbd58bff54160b6057ffca962cd9f8f67b9c98030fa79b48c7e9f98d5d586dd075c13db588cf8a80035fed5f7db72a85083962e714bb584bff3b6538f0a0e63ab94ce4110b8b7c10a018487350c304c5a28859d5cbe9d57a6d270a659c65cf83637b081650af418782eb591b12cc735f85e74b4553ff627dc6a5e52d162e03d65b809fdad4426e1b0c4b2ca877dd04a0e4d553a4adfb3cec5f29c63b708563e74bba7711a82ef0c8e51d9ead8ecbc91aef5910011c8f51c76cfdba213b02c4afc6fbb27d324e6ccb2b496c485fdc000dc75a556e380fab2ba7113083dc58bea458ab754b21b7d81d04a8c9e972938bd9002a8ade1bce68183c30f2c13bd31137f404a8e6e08f5886193c093db86730e7322362b84dd7b3865841fdb9fef36dd1499f4f586bf6995930453148957ed6caadcdd5c8a9b640158ddde5f438587ef936071104d075d95fd33ce9811dbfc7c34ebe1350e5fc4317b07c9e3a63f604d37a50ac39d2f97716848769a7668928a732a103437ae1698bdcfb356d60e601e885a81a19692cfd8bd797c651d3538912169fac45ac7e87dd44c52dae720103b824467c6f96338cbab42947af5d741c4bb64727cfdfe705a3c2a4f91cc0446a9bb795c887463d5bb4cce78592b54840eb7900da98b6d93f5e136fc44d05ec0e0631be8034a81f85b0e0c31a059b7a4998becaff514b726fedb0a04ac016d61bec420630bec264e2267c74eefbad7c3f8bb1d1d5642bac6a389abe7279d52a70be78f2a9004c29e4ba1102fbfdab25cf2cdbef8c897d96463d15578")
        associated_data = bytes.fromhex("e000000001114d4baa6499963d98d83a6c7081fe81638912d3e8766e5ce3f9feacfe0535c4ff49973c02800003d900")

        plaintext: bytes = self.handshake_decryptor_chacha20.decrypt(ciphertext, b"\x00", associated_data, True)

        self.assertEqual(plaintext, bytes.fromhex("060043c40800007e007c003900690012cfdb664483ebe8ec888d7f48162918bd951f02101cbee388f5ae0135365a0e1cb33e58e20f12d3e8766e5ce3f9feacfe0535c4ff49973c02060480040000070480040000040480100000080240640901030104800075300e01076ab20011080000000100000001001000050003026833001c000240010b0003a00000039c000397308203933082027ba00302010202146a95f37e73b552b1705f0ebfcdce7f1f99a05821300d06092a864886f70d01010b05003059310b30090603550406130241553113301106035504080c0a536f6d652d53746174653121301f060355040a0c18496e7465726e6574205769646769747320507479204c74643112301006035504030c096c6f63616c686f7374301e170d3233313232313131303732325a170d3234313232303131303732325a3059310b30090603550406130241553113301106035504080c0a536f6d652d53746174653121301f060355040a0c18496e7465726e6574205769646769747320507479204c74643112301006035504030c096c6f63616c686f737430820122300d06092a864886f70d01010105000382010f003082010a0282010100e48e6d6c21c0fca9810817b31ee083f7cedc98f5b9cd1f038e4b4df756abcc261f66f131902a8c031615fd5411a917f656f893d649cd604daa73bd00fdd764fe3c6c1cc347e66ffb6c0714abf0f4b9cdf24d7d7d5b2596556f45e81672a565425cd64db8815f66c6529ae6f59eacc5cfeb969523332c94193fc6f4731b25fa4d355bbd2fac165b418c021992991f2e22c93eb7bcf25dfdbf4b47b17e7386f96716dae9681ce5e086f1d1c2f09deeaa87f518d47a2f540b44319b6e078ae4253c523267c1ee5cd123dec22a9055f50bccff6e401d4c59780b3ee2cb26131c5d5e9243f069fa60875aa3a907d2a3d6242e82e2d0d3928f191a4bad3fe33f5427530203010001a3533051301d0603551d0e0416041426e46d370ddf57c69be4f3b9a85d0aa32021a316301f0603551d2304183016801426e46d370ddf57c69be4f3b9a85d0aa32021a316300f0603551d130101ff040530030101ff300d06092a864886f70d01010b05000382010100771e8ba50a264cc9ad131e9479b51eab889ac05aa00ab3662cc6200860a9c4ee3245f53a9137298bbefdc01529ee17725e0efeb614af8dbb478499b4feedb7a4c7380aba5b8d5705c8c1ab1da1a3bd99c50a41cd060dadeb654589bc06d98db2dfb787a985e8e18b8484c9730a2c87e62299c6b7981afc26a54a4997d651d669cfab9616ea50d2028dc486885574c5beb5ba7bf4cad8473ca5477bbc18046f2a"))

    def test_application_decryption(self):
        # AES_GCM_128
        ciphertext = bytes.fromhex(
            "4891173d926bf46366891858af857a0d81b58a96f7d7d9c4816a71dcdc1c42365b1c953999fcef77a4ad6607c9833b004115389424c6c7ae6df2868ab1ea6e2953643b669efd702e07fc6214ae8a9bce53bfadb4da9d29b910fff4ab40c69bbf87cf1b405a063a03e2b42f58b28932f29ff8e3e2451ecec763b6540766b94df2f0349ac5cf356634a9835f214b05b592dd3cbb19f13d69794071aa3f9bf9f89b1b1222db0370c9a80a8f4347e0631427eeec02fb79a312a584e857076cca48501b08beebee8217521f9f642cceb16996d7b5788a064a5700423064d1e6afe815fc2e793bc2dc48b69b7f2c4a5e9ee6ae79c761724b1098daaccd6a74c8f287cb9114023b917486b5755d0ba49a16a72512")
        associated_data = bytes.fromhex(
            "00defbb4879c124a4b6be745d7814305806800")

        plaintext: bytes = self.application_decryptor_aes_128_gcm.decrypt(ciphertext, b"\x00", associated_data, True)

        self.assertEqual(plaintext, bytes.fromhex(
            "18060012576a790d9836e634f2a5d4a5abc3c11e8ff144c88bf186946451fec4d63728e240ba18050012e5a9eb12a7f4a7c9df850b703dd3ce156076842d14467bd9a4b3b599efa9a5b62b2c1804001240a1ee1ab838763c741ee0fdc2b7933f26b14a01bef887d925ebae96f5f6550786f61803001253ec6a2cab70662f6959bc19b357313e5be3696b3a240f880f9dcd8ebd6ce36b244a18020012e5e6a99305ce0ffe692860d2e55487a984b4b4ca30b4107d8e2c992fea82f99e16571801001272420a5def8e1686907ed05ba74d68bdd1fca516976c6b1330f165d1021f51d6a59c0a031200040f06ffffffffffffffff0150000740640a0b01030a070102"))

        # AES_GCM_256
        ciphertext = bytes.fromhex(
            "fefd9137f6a26e96b3b572282da02d8dd54271fa659737a0acdc19ccc50fd2cb1fd21aba2f9b1fa760aeaa17ce9e533c128df296559f621926c30dc5deb5397aedbc14339ab20543e7afdf6efec8ba2cecd72c94af86024e2bbe03a42c2d091e358233b758b5fbb1dbc3f6ad70a6c55c19d79766d0a87468399fa7804b8e10e15c225fc09bba138a1133467dcbd5fb5a4a2dc965cc6dcfa1460bb25b540c5867d188092907de9b497afc46d94585437be1aeaf477ab949edb0866a5fe770bc95640c5b9e83cdbfbe0aac85669277824441e283016fd9808611f03acb0f1dea388343cb542405760a1ebbbb05f2c52e8610d8178fc720c5beb34cf5aec030c920ec2ea691a3718ba1a8b4d9a04ef7a8bc7b")
        associated_data = bytes.fromhex(
            "40d938ff020b30ce7dfc3aed3ba582e019e700")

        plaintext: bytes = self.application_decryptor_aes_256_gcm.decrypt(ciphertext, b"\x00", associated_data, True)

        self.assertEqual(plaintext, bytes.fromhex(
            "18060012d3e5394ef9763d79dcc35352c5bd817ab96ea6ee0343f1bf0b6e1c6eb7ac58e8177218050012d9f7316f0a439d5074d449827e88d8cfcd5a5086675a76dce403df0581555f1c5f4c18040012b33086adce7866f827bd296a43eb4f4159badeee5edab8298e1ce681db86478b044c18030012e4bfd134f33342ae43e481f20948ffdddfd6516deecfc6abda1741a81685768bae8018020012e26260c2e9a3766af1ba11298887a5995d29c1f30be6fd83e70b7f3f34d8f1e3bda618010012ffa6c7bdd1ff31822dc549a2ae317ce17da1627f59d13fa79dc8397a128539523b6f0a031200040f06ffffffffffffffff0150000740640a0b01030a070102"))

    def test_chacha_20_poly1305(self):
        # Short Header Packet with ChaCha20-Poly1305 (From RFC 9001)
        ciphertext = bytes.fromhex("655e5cd55c41f69080575d7999c25a5bfb")
        associated_data = bytes.fromhex("4200bff4")
        plaintext = self.chacha_decryptor.decrypt(ciphertext, bytes.fromhex("2700BFF4"), associated_data, True)
        self.assertEqual(plaintext, b"\x01")
